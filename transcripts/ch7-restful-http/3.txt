00:02 Let's look at a real API. This API is going to be the latest new API, 
00:08 you can see modified just 25 days ago, and and created eight months ago, 
00:12 so it's quite new for Basecamp. 
00:15 So, Basecamp is a project management site that is pretty well known in the tech,
00:19 especially the web industry, for a couple of reasons.
00:22 So it was created by this company called "37 Signals"
00:25 and they were a web design company,
00:28 and it turned out their product Basecamp was way more popular 
00:30 and profitable and interesting than actually just being a web consulting company, 
00:35 so they basically started selling Basecamp as their main thing. 
00:39 They just built it for themselves internally, 
00:42 and it's also notable because this is where Ruby on Rails comes from. 
00:47 DHH and Jason Fried and the guys at 37 built Basecamp 
00:52 and they said, 'Oh we have this really cool unique way of writing web apps
00:55 let's extract that as a framework and we'll call that Ruby on Rails', so that's all good. 
00:58 There is no more "37 Signals" anymore 
01:00 because they just renamed their company name to Basecamp, 
01:04 after a while which is pretty interesting, but let's look at their API. 
01:07 This is pretty new. We'll go over here and actually pull up some details 
01:11 that I have already gotten us too, so we can go check out what are called Basecamps, 
01:14 you can see, recently updated by DHH and we can do things like a GET request, 
01:19 so there is an API URL and they are just going to use the short relative URL. 
01:25 So if we want to get all the Basecamps, we can just do get/projects 
01:29 and they have everything returning JSON and to make it super explicit they say '.json'. Okay, 
01:34 so what else can we do? So if we want to read data about the projects we do a GET. 
01:39 If we want to read specific, here is the list of projects that come back. 
01:42 If we want to get a particular one, let's say one with id 1, 
01:46 we issue a GET request against projects/1/json, okay, 
01:50 and then, we get information back here like so. Right. 
01:55 So when it was created, its name, its description and so on, and so on, 
01:59 so lots of information about that project. 
02:02 On the other hand, if we want to create a project, or a Basecamp, 
02:05 just like I said, we are going to use a POST to create something, 
02:08 we don't know what its id is going to be, it's going to be generated by the server, 
02:11 but we know we want to make one so we are going to do a POST against projects.json
02:15 and this is the data that we are going to send,
02:18 just the required data, the name, the description, 
02:21 and then of course, this stuff that is up here will all be generated by the server, 
02:23 and presumably returned to us. 
02:26 We also might get a hey, error, you are not allowed to create one of these, 
02:29 you are out of space or whatever, the other notable thing to look at is 
02:32 look at the use of the status codes, instead of just always returning 200 
02:37 and maybe returning 200 response code, with an error that says sorry, 
02:42 they are actually returning status codes that mean specific things. 
02:47 So a 201 specifically means created; so, you should look for that in this example.
02:52 A 507 specifically means insufficient storage, 
02:55 and they are using that to represent the status code meaning of this error 
02:59 and they give you text, just so you also know. 
03:01 Let's see, there is a few other things we can check out here, 
03:05 if we want to update, no surprise, we are going to do a put against that thing 
03:08 and this will replace the name and replace the description supposedly, 
03:11 this is going to come back with a 200 and say yeah that worked, and again, 
03:14 we are going to do a DELETE. So we are going to come up here 
03:17 and if we want to do a DELETE to this thing, and if the status code is 204 
03:20 no content, which is typically the agreed upon status code for delete. 
03:24 So, this is just the project management side of Basecamp 
03:28 or the API for managing projects and Basecamp which they call Basecamps, 
03:33 but there is lots of other pieces, you can scroll down and see what they have here. 
03:36 They have Basecamps, they have comments, documents 
03:40 but the whole API is very RESTful and it makes strong use of URLs that point at nouns 
03:46 and leveraging the HTTP verbs against those nouns to have meaning. 
03:52 Alright, so in the next section we are going to work with the surface 
03:56 that I've created that lets us do all sorts of modifications, 
03:59 create stuff, update stuff, delete stuff and so on, 
04:02 and we are going to see how to take this idea and use it on the client side.  
