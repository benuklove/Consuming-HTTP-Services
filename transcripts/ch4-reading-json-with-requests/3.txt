00:01 So you've seen JSON parsing and serialization in action in Python. 
00:04 Let's review the key concepts that were at play.
00:08 So this is more or less the same code that we just wrote 
00:10 and remember we started with importing of the json module. 
00:13 This is a built-in thing in the standard libraries, 
00:16 This is a built-in thing in the Python standard library.
00:19 So we didn't have to install an external package to get this support. 
00:22 We just 'import json' and we're off to the races. So we started with JSON text, 
00:25 which is just an in-memory version of some JSON string representation, 
00:31 and we want to turn that into something that we could actually work with in Python. 
00:34 So what we did is we called the 'loads', load from sting, 
00:37 and we passed the JSON text in to be parsed. We got back data, 
00:41 which we saw was a dictionary. So we have this dictionary/
00:44 We work with it however you work with dictionaries in Python using get, 
00:48 assigning to a key to change the values, 
00:51 things like that and then to get the data back out, to send it off to somewhere 
00:54 to save it to a file of course we just did a 'dumps', dump to string, 
00:58 and what we get back is more text. 
01:00 Now, it's worth noting that the thing that came out here
01:03 is sort of somewhat minified JSON.
01:06 There is no like line breaks or indentation or anything pretty about it. 
01:09 You can set an indentation setting on the 'dumps' method 
01:13 and it will be a little bit nicer text if you care about readability. 
